'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ClauseGenerateText = exports.ClauseOb = exports.ClauseErrors = undefined;

var _NP = require('./NP');

var _SchemaConstants = require('./SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

var _VP = require('./VP');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ClauseOb(props) {

	this.t = _SchemaConstants2.default.Clause.t;
	this.v = _SchemaConstants2.default.Clause.cv;

	// p50 the head of a clause, aka the predicate is a VP
	this.np = props.np;
	this.vp = props.vp;
}

var ClauseErrors = {
	'NO_NP': 'This Clause has no noun phrase.',
	'NO_VP': 'This Clause has no verb phrase.'

};

var ClauseGenerateText = function ClauseGenerateText(clause) {

	if (!clause.np) return { e: ClauseErrors.NO_NP };

	if (!clause.vp) return { e: ClauseErrors.NO_VP };

	return (0, _NP.NPGenerateText)(clause.np) + ' ' + (0, _VP.VPGenerateText)(clause.vp);
};

exports.ClauseErrors = ClauseErrors;
exports.ClauseOb = ClauseOb;
exports.ClauseGenerateText = ClauseGenerateText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DbGF1c2UuanMiXSwibmFtZXMiOlsiQ2xhdXNlT2IiLCJwcm9wcyIsInQiLCJDbGF1c2UiLCJ2IiwiY3YiLCJucCIsInZwIiwiQ2xhdXNlRXJyb3JzIiwiQ2xhdXNlR2VuZXJhdGVUZXh0IiwiY2xhdXNlIiwiZSIsIk5PX05QIiwiTk9fVlAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7O0FBRUEsU0FBU0EsUUFBVCxDQUFrQkMsS0FBbEIsRUFBeUI7O0FBRXhCLE1BQUtDLENBQUwsR0FBUywwQkFBT0MsTUFBUCxDQUFjRCxDQUF2QjtBQUNBLE1BQUtFLENBQUwsR0FBUywwQkFBT0QsTUFBUCxDQUFjRSxFQUF2Qjs7QUFFQTtBQUNBLE1BQUtDLEVBQUwsR0FBVUwsTUFBTUssRUFBaEI7QUFDQSxNQUFLQyxFQUFMLEdBQVVOLE1BQU1NLEVBQWhCO0FBRUE7O0FBRUQsSUFBTUMsZUFBZTtBQUNwQixVQUFRLGlDQURZO0FBRXBCLFVBQVE7O0FBRlksQ0FBckI7O0FBTUEsSUFBTUMscUJBQXFCLFNBQXJCQSxrQkFBcUIsQ0FBQ0MsTUFBRCxFQUFZOztBQUV0QyxLQUFHLENBQUNBLE9BQU9KLEVBQVgsRUFDQyxPQUFPLEVBQUNLLEdBQUVILGFBQWFJLEtBQWhCLEVBQVA7O0FBRUQsS0FBRyxDQUFDRixPQUFPSCxFQUFYLEVBQ0MsT0FBTyxFQUFDSSxHQUFFSCxhQUFhSyxLQUFoQixFQUFQOztBQUVELFFBQU8sd0JBQWVILE9BQU9KLEVBQXRCLElBQTRCLEdBQTVCLEdBQWtDLHdCQUFlSSxPQUFPSCxFQUF0QixDQUF6QztBQUVBLENBVkQ7O1FBWVFDLFksR0FBQUEsWTtRQUNBUixRLEdBQUFBLFE7UUFDQVMsa0IsR0FBQUEsa0IiLCJmaWxlIjoiQ2xhdXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOUEdlbmVyYXRlVGV4dH0gZnJvbSAnLi9OUCdcbmltcG9ydCBTY2hlbWEgICAgICAgICAgIGZyb20gJy4vU2NoZW1hQ29uc3RhbnRzJ1xuaW1wb3J0IHtWUEdlbmVyYXRlVGV4dH0gZnJvbSAnLi9WUCdcblxuZnVuY3Rpb24gQ2xhdXNlT2IocHJvcHMpIHtcblxuXHR0aGlzLnQgPSBTY2hlbWEuQ2xhdXNlLnRcblx0dGhpcy52ID0gU2NoZW1hLkNsYXVzZS5jdlxuXG5cdC8vIHA1MCB0aGUgaGVhZCBvZiBhIGNsYXVzZSwgYWthIHRoZSBwcmVkaWNhdGUgaXMgYSBWUFxuXHR0aGlzLm5wID0gcHJvcHMubnBcblx0dGhpcy52cCA9IHByb3BzLnZwXG5cbn1cblxuY29uc3QgQ2xhdXNlRXJyb3JzID0ge1xuXHQnTk9fTlAnOidUaGlzIENsYXVzZSBoYXMgbm8gbm91biBwaHJhc2UuJyxcblx0J05PX1ZQJzonVGhpcyBDbGF1c2UgaGFzIG5vIHZlcmIgcGhyYXNlLidcblxufVxuXG5jb25zdCBDbGF1c2VHZW5lcmF0ZVRleHQgPSAoY2xhdXNlKSA9PiB7XG5cblx0aWYoIWNsYXVzZS5ucClcblx0XHRyZXR1cm4ge2U6Q2xhdXNlRXJyb3JzLk5PX05QfVxuXG5cdGlmKCFjbGF1c2UudnApXG5cdFx0cmV0dXJuIHtlOkNsYXVzZUVycm9ycy5OT19WUH1cblxuXHRyZXR1cm4gTlBHZW5lcmF0ZVRleHQoY2xhdXNlLm5wKSArICcgJyArIFZQR2VuZXJhdGVUZXh0KGNsYXVzZS52cClcblxufVxuXG5leHBvcnQge0NsYXVzZUVycm9yc31cbmV4cG9ydCB7Q2xhdXNlT2J9XG5leHBvcnQge0NsYXVzZUdlbmVyYXRlVGV4dH1cbiJdfQ==