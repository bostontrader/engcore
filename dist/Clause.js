'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ClauseGenerateText = exports.ClauseOb = exports.ClauseErrors = undefined;

var _NP = require('./NP');

var _SchemaConstants = require('./pos/SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

var _VP = require('./VP');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ClauseOb(props) {

	this.t = _SchemaConstants2.default.Clause.t;
	this.v = _SchemaConstants2.default.Clause.cv;

	// p50 the head of a clause, aka the predicate is a VP
	this.np = props.np;
	this.vp = props.vp;
}

var ClauseErrors = {
	'NO_NP': 'This Clause has no noun phrase.',
	'NO_VP': 'This Clause has no verb phrase.'

};

var ClauseGenerateText = function ClauseGenerateText(clause) {

	if (!clause.np) return { e: ClauseErrors.NO_NP };

	if (!clause.vp) return { e: ClauseErrors.NO_VP };

	return (0, _NP.NPGenerateText)(clause.np) + ' ' + (0, _VP.VPGenerateText)(clause.vp);
};

exports.ClauseErrors = ClauseErrors;
exports.ClauseOb = ClauseOb;
exports.ClauseGenerateText = ClauseGenerateText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9DbGF1c2UuanMiXSwibmFtZXMiOlsiQ2xhdXNlT2IiLCJwcm9wcyIsInQiLCJDbGF1c2UiLCJ2IiwiY3YiLCJucCIsInZwIiwiQ2xhdXNlRXJyb3JzIiwiQ2xhdXNlR2VuZXJhdGVUZXh0IiwiY2xhdXNlIiwiZSIsIk5PX05QIiwiTk9fVlAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUNBOzs7O0FBRUEsU0FBU0EsUUFBVCxDQUFrQkMsS0FBbEIsRUFBeUI7O0FBRXhCLE1BQUtDLENBQUwsR0FBUywwQkFBT0MsTUFBUCxDQUFjRCxDQUF2QjtBQUNBLE1BQUtFLENBQUwsR0FBUywwQkFBT0QsTUFBUCxDQUFjRSxFQUF2Qjs7QUFFQTtBQUNBLE1BQUtDLEVBQUwsR0FBVUwsTUFBTUssRUFBaEI7QUFDQSxNQUFLQyxFQUFMLEdBQVVOLE1BQU1NLEVBQWhCO0FBRUE7O0FBRUQsSUFBTUMsZUFBZTtBQUNwQixVQUFRLGlDQURZO0FBRXBCLFVBQVE7O0FBRlksQ0FBckI7O0FBTUEsSUFBTUMscUJBQXFCLFNBQXJCQSxrQkFBcUIsQ0FBQ0MsTUFBRCxFQUFZOztBQUV0QyxLQUFHLENBQUNBLE9BQU9KLEVBQVgsRUFDQyxPQUFPLEVBQUNLLEdBQUVILGFBQWFJLEtBQWhCLEVBQVA7O0FBRUQsS0FBRyxDQUFDRixPQUFPSCxFQUFYLEVBQ0MsT0FBTyxFQUFDSSxHQUFFSCxhQUFhSyxLQUFoQixFQUFQOztBQUVELFFBQU8sd0JBQWVILE9BQU9KLEVBQXRCLElBQTRCLEdBQTVCLEdBQWtDLHdCQUFlSSxPQUFPSCxFQUF0QixDQUF6QztBQUVBLENBVkQ7O1FBWVFDLFksR0FBQUEsWTtRQUNBUixRLEdBQUFBLFE7UUFDQVMsa0IsR0FBQUEsa0IiLCJmaWxlIjoiQ2xhdXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOUEdlbmVyYXRlVGV4dH0gZnJvbSAnLi9OUCdcbmltcG9ydCBTY2hlbWEgICAgICAgICAgIGZyb20gJy4vcG9zL1NjaGVtYUNvbnN0YW50cydcbmltcG9ydCB7VlBHZW5lcmF0ZVRleHR9IGZyb20gJy4vVlAnXG5cbmZ1bmN0aW9uIENsYXVzZU9iKHByb3BzKSB7XG5cblx0dGhpcy50ID0gU2NoZW1hLkNsYXVzZS50XG5cdHRoaXMudiA9IFNjaGVtYS5DbGF1c2UuY3ZcblxuXHQvLyBwNTAgdGhlIGhlYWQgb2YgYSBjbGF1c2UsIGFrYSB0aGUgcHJlZGljYXRlIGlzIGEgVlBcblx0dGhpcy5ucCA9IHByb3BzLm5wXG5cdHRoaXMudnAgPSBwcm9wcy52cFxuXG59XG5cbmNvbnN0IENsYXVzZUVycm9ycyA9IHtcblx0J05PX05QJzonVGhpcyBDbGF1c2UgaGFzIG5vIG5vdW4gcGhyYXNlLicsXG5cdCdOT19WUCc6J1RoaXMgQ2xhdXNlIGhhcyBubyB2ZXJiIHBocmFzZS4nXG5cbn1cblxuY29uc3QgQ2xhdXNlR2VuZXJhdGVUZXh0ID0gKGNsYXVzZSkgPT4ge1xuXG5cdGlmKCFjbGF1c2UubnApXG5cdFx0cmV0dXJuIHtlOkNsYXVzZUVycm9ycy5OT19OUH1cblxuXHRpZighY2xhdXNlLnZwKVxuXHRcdHJldHVybiB7ZTpDbGF1c2VFcnJvcnMuTk9fVlB9XG5cblx0cmV0dXJuIE5QR2VuZXJhdGVUZXh0KGNsYXVzZS5ucCkgKyAnICcgKyBWUEdlbmVyYXRlVGV4dChjbGF1c2UudnApXG5cbn1cblxuZXhwb3J0IHtDbGF1c2VFcnJvcnN9XG5leHBvcnQge0NsYXVzZU9ifVxuZXhwb3J0IHtDbGF1c2VHZW5lcmF0ZVRleHR9XG4iXX0=