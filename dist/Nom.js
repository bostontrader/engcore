'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.NomOb = exports.NomGenerateText = exports.NomErrors = undefined;

var _SchemaConstants = require('./pos/SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 326,327 has a N or Pro as a head and various dependents. Such as:
// * the determinatives: a, the, every
// * pre-head AdjP
// * relative clauses
// 329 can be head of NP or pre-head dependent
function NomOb(props) {
	this.t = _SchemaConstants2.default.Nom.t;
	this.v = _SchemaConstants2.default.Nom.cv;

	this.head = props.head;
	this.modifier = props.modifier;
}

var NomErrors = {
	'MISSING_HEAD': 'This nominal must have a head.'
};

var NomGenerateText = function NomGenerateText(nom) {

	if (!nom.head) return { e: NomErrors.MISSING_HEAD };

	if (nom.modifier)
		//return AdjGenerateText(nom.modifier) + ' ' + NGenerateText(nom.head)
		return nom.modifier.analyse().t + ' ' + nom.head.analyse().t;else
		//return NGenerateText(nom.head)
		return nom.head.analyse().t;
};

exports.NomErrors = NomErrors;
exports.NomGenerateText = NomGenerateText;
exports.NomOb = NomOb;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Ob20uanMiXSwibmFtZXMiOlsiTm9tT2IiLCJwcm9wcyIsInQiLCJOb20iLCJ2IiwiY3YiLCJoZWFkIiwibW9kaWZpZXIiLCJOb21FcnJvcnMiLCJOb21HZW5lcmF0ZVRleHQiLCJub20iLCJlIiwiTUlTU0lOR19IRUFEIiwiYW5hbHlzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU0EsS0FBVCxDQUFlQyxLQUFmLEVBQXNCO0FBQ3JCLE1BQUtDLENBQUwsR0FBUywwQkFBT0MsR0FBUCxDQUFXRCxDQUFwQjtBQUNBLE1BQUtFLENBQUwsR0FBUywwQkFBT0QsR0FBUCxDQUFXRSxFQUFwQjs7QUFFQSxNQUFLQyxJQUFMLEdBQVlMLE1BQU1LLElBQWxCO0FBQ0EsTUFBS0MsUUFBTCxHQUFnQk4sTUFBTU0sUUFBdEI7QUFDQTs7QUFFRCxJQUFNQyxZQUFZO0FBQ2pCLGlCQUFlO0FBREUsQ0FBbEI7O0FBSUEsSUFBTUMsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxHQUFELEVBQVM7O0FBRWhDLEtBQUcsQ0FBQ0EsSUFBSUosSUFBUixFQUNDLE9BQU8sRUFBQ0ssR0FBRUgsVUFBVUksWUFBYixFQUFQOztBQUVELEtBQUdGLElBQUlILFFBQVA7QUFDQztBQUNBLFNBQU9HLElBQUlILFFBQUosQ0FBYU0sT0FBYixHQUF1QlgsQ0FBdkIsR0FBMkIsR0FBM0IsR0FBaUNRLElBQUlKLElBQUosQ0FBU08sT0FBVCxHQUFtQlgsQ0FBM0QsQ0FGRDtBQUtDO0FBQ0EsU0FBT1EsSUFBSUosSUFBSixDQUFTTyxPQUFULEdBQW1CWCxDQUExQjtBQUNELENBWkQ7O1FBY1FNLFMsR0FBQUEsUztRQUNBQyxlLEdBQUFBLGU7UUFDQVQsSyxHQUFBQSxLIiwiZmlsZSI6Ik5vbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTY2hlbWEgICAgICAgICAgICBmcm9tICcuL3Bvcy9TY2hlbWFDb25zdGFudHMnXG5cbi8vIDMyNiwzMjcgaGFzIGEgTiBvciBQcm8gYXMgYSBoZWFkIGFuZCB2YXJpb3VzIGRlcGVuZGVudHMuIFN1Y2ggYXM6XG4vLyAqIHRoZSBkZXRlcm1pbmF0aXZlczogYSwgdGhlLCBldmVyeVxuLy8gKiBwcmUtaGVhZCBBZGpQXG4vLyAqIHJlbGF0aXZlIGNsYXVzZXNcbi8vIDMyOSBjYW4gYmUgaGVhZCBvZiBOUCBvciBwcmUtaGVhZCBkZXBlbmRlbnRcbmZ1bmN0aW9uIE5vbU9iKHByb3BzKSB7XG5cdHRoaXMudCA9IFNjaGVtYS5Ob20udFxuXHR0aGlzLnYgPSBTY2hlbWEuTm9tLmN2XG5cblx0dGhpcy5oZWFkID0gcHJvcHMuaGVhZFxuXHR0aGlzLm1vZGlmaWVyID0gcHJvcHMubW9kaWZpZXJcbn1cblxuY29uc3QgTm9tRXJyb3JzID0ge1xuXHQnTUlTU0lOR19IRUFEJzonVGhpcyBub21pbmFsIG11c3QgaGF2ZSBhIGhlYWQuJ1xufVxuXG5jb25zdCBOb21HZW5lcmF0ZVRleHQgPSAobm9tKSA9PiB7XG5cblx0aWYoIW5vbS5oZWFkKVxuXHRcdHJldHVybiB7ZTpOb21FcnJvcnMuTUlTU0lOR19IRUFEfVxuXG5cdGlmKG5vbS5tb2RpZmllcilcblx0XHQvL3JldHVybiBBZGpHZW5lcmF0ZVRleHQobm9tLm1vZGlmaWVyKSArICcgJyArIE5HZW5lcmF0ZVRleHQobm9tLmhlYWQpXG5cdFx0cmV0dXJuIG5vbS5tb2RpZmllci5hbmFseXNlKCkudCArICcgJyArIG5vbS5oZWFkLmFuYWx5c2UoKS50XG5cblx0ZWxzZVxuXHRcdC8vcmV0dXJuIE5HZW5lcmF0ZVRleHQobm9tLmhlYWQpXG5cdFx0cmV0dXJuIG5vbS5oZWFkLmFuYWx5c2UoKS50XG59XG5cbmV4cG9ydCB7Tm9tRXJyb3JzfVxuZXhwb3J0IHtOb21HZW5lcmF0ZVRleHR9XG5leHBvcnQge05vbU9ifVxuIl19