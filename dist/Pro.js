'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ProType = exports.ProGenerateText = exports.ProOb = exports.ProErrors = undefined;

var _Gender = require('./Gender');

var _Gender2 = _interopRequireDefault(_Gender);

var _Person = require('./Person');

var _Person2 = _interopRequireDefault(_Person);

var _SchemaConstants = require('./SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

var _Plurality = require('../pos/Plurality');

var _Plurality2 = _interopRequireDefault(_Plurality);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ProOb(props) {
	this.t = _SchemaConstants2.default.Pro.t;
	this.v = _SchemaConstants2.default.Pro.cv;

	this.type = props.type;
	this.person = props.person;
	this.plurality = props.plurality;
	this.gender = props.gender;
}

var ProType = {
	'Subject': 100,
	'Object': 101,
	'Possessive': 102,
	'ReflexiveIntensive': 103
};

var PronounTable = [[['I', 'we'], ['you', 'you'], [['he', 'she', 'it'], 'they']], // subject
[['me', 'us'], ['you', 'you'], [['him', 'her', 'it'], 'them']], // object
[['mine', 'ours'], ['yours', 'yours'], [['his', 'hers'], 'theirs']], // possessive pronoun
[['myself', 'ourselves'], ['yourself', 'yourselves'], [['himself', 'herself', 'itself'], 'themselves']]];

var ProErrors = {
	'BAD_PRONOUN_TYPE': 'The pronoun type is not set correctly.',
	'BAD_PERSON': 'Person is not set correctly.',
	'BAD_PLURALITY': 'Plurality is not set correctly.'
};

var ProGenerateText = function ProGenerateText(pronoun) {

	var retVal = void 0;

	var type = pronoun.type,
	    person = pronoun.person,
	    plurality = pronoun.plurality,
	    gender = pronoun.gender;

	// Convert constant values to indices for use here.

	var type_idx = void 0;
	switch (type) {
		case ProType.Subject:
			type_idx = 0;
			break;
		case ProType.Object:
			type_idx = 1;
			break;
		case ProType.Possessive:
			type_idx = 2;
			break;
		case ProType.ReflexiveIntensive:
			type_idx = 3;
			break;
		default:
			return { e: ProErrors.BAD_PRONOUN_TYPE };
	}

	var person_idx = void 0;
	switch (person) {
		case _Person2.default.First:
			person_idx = 0;
			break;
		case _Person2.default.Second:
			person_idx = 1;
			break;
		case _Person2.default.Third:
			person_idx = 2;
			break;
		default:
			return { e: ProErrors.BAD_PERSON };
	}

	var plurality_idx = void 0;
	switch (plurality) {
		case _Plurality2.default.Singular:
			plurality_idx = 0;
			break;
		case _Plurality2.default.Plural:
			plurality_idx = 1;
			break;
		default:
			return { e: ProErrors.BAD_PLURALITY };
	}

	retVal = PronounTable[type_idx][person_idx][plurality_idx];

	if (person === _Person2.default.Third && plurality === _Plurality2.default.Singular) if (gender === _Gender2.default.Male) {
		retVal = retVal[0];
	} else if (gender === _Gender2.default.Female) {
		retVal = retVal[1];
	} else {
		retVal = retVal[2];
	}

	return retVal;
};

exports.ProErrors = ProErrors;
exports.ProOb = ProOb;
exports.ProGenerateText = ProGenerateText;
exports.ProType = ProType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Qcm8uanMiXSwibmFtZXMiOlsiUHJvT2IiLCJwcm9wcyIsInQiLCJQcm8iLCJ2IiwiY3YiLCJ0eXBlIiwicGVyc29uIiwicGx1cmFsaXR5IiwiZ2VuZGVyIiwiUHJvVHlwZSIsIlByb25vdW5UYWJsZSIsIlByb0Vycm9ycyIsIlByb0dlbmVyYXRlVGV4dCIsInByb25vdW4iLCJyZXRWYWwiLCJ0eXBlX2lkeCIsIlN1YmplY3QiLCJPYmplY3QiLCJQb3NzZXNzaXZlIiwiUmVmbGV4aXZlSW50ZW5zaXZlIiwiZSIsIkJBRF9QUk9OT1VOX1RZUEUiLCJwZXJzb25faWR4IiwiRmlyc3QiLCJTZWNvbmQiLCJUaGlyZCIsIkJBRF9QRVJTT04iLCJwbHVyYWxpdHlfaWR4IiwiU2luZ3VsYXIiLCJQbHVyYWwiLCJCQURfUExVUkFMSVRZIiwiTWFsZSIsIkZlbWFsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxTQUFTQSxLQUFULENBQWVDLEtBQWYsRUFBc0I7QUFDckIsTUFBS0MsQ0FBTCxHQUFTLDBCQUFPQyxHQUFQLENBQVdELENBQXBCO0FBQ0EsTUFBS0UsQ0FBTCxHQUFTLDBCQUFPRCxHQUFQLENBQVdFLEVBQXBCOztBQUVBLE1BQUtDLElBQUwsR0FBYUwsTUFBTUssSUFBbkI7QUFDQSxNQUFLQyxNQUFMLEdBQWNOLE1BQU1NLE1BQXBCO0FBQ0EsTUFBS0MsU0FBTCxHQUFpQlAsTUFBTU8sU0FBdkI7QUFDQSxNQUFLQyxNQUFMLEdBQWNSLE1BQU1RLE1BQXBCO0FBQ0E7O0FBRUQsSUFBTUMsVUFBVTtBQUNmLFlBQXNCLEdBRFA7QUFFZixXQUFzQixHQUZQO0FBR2YsZUFBc0IsR0FIUDtBQUlmLHVCQUFzQjtBQUpQLENBQWhCOztBQU9BLElBQU1DLGVBQWUsQ0FDcEIsQ0FBQyxDQUFDLEdBQUQsRUFBVSxJQUFWLENBQUQsRUFBd0IsQ0FBQyxLQUFELEVBQVksS0FBWixDQUF4QixFQUFr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LFMsR0FBQUEsUztRQUNBWixLLEdBQUFBLEs7UUFDQWEsZSxHQUFBQSxlO1FBQ0FILE8sR0FBQUEsTyIsImZpbGUiOiJQcm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2VuZGVyICAgIGZyb20gJy4vR2VuZGVyJ1xuaW1wb3J0IFBlcnNvbiAgICBmcm9tICcuL1BlcnNvbidcbmltcG9ydCBTY2hlbWEgICAgZnJvbSAnLi9TY2hlbWFDb25zdGFudHMnXG5pbXBvcnQgUGx1cmFsaXR5IGZyb20gJy4uL3Bvcy9QbHVyYWxpdHknXG5cbmZ1bmN0aW9uIFByb09iKHByb3BzKSB7XG5cdHRoaXMudCA9IFNjaGVtYS5Qcm8udFxuXHR0aGlzLnYgPSBTY2hlbWEuUHJvLmN2XG5cblx0dGhpcy50eXBlICA9IHByb3BzLnR5cGVcblx0dGhpcy5wZXJzb24gPSBwcm9wcy5wZXJzb25cblx0dGhpcy5wbHVyYWxpdHkgPSBwcm9wcy5wbHVyYWxpdHlcblx0dGhpcy5nZW5kZXIgPSBwcm9wcy5nZW5kZXJcbn1cblxuY29uc3QgUHJvVHlwZSA9IHtcblx0J1N1YmplY3QnOiAgICAgICAgICAgIDEwMCxcblx0J09iamVjdCc6ICAgICAgICAgICAgIDEwMSxcblx0J1Bvc3Nlc3NpdmUnOiAgICAgICAgIDEwMixcblx0J1JlZmxleGl2ZUludGVuc2l2ZSc6IDEwM1xufVxuXG5jb25zdCBQcm9ub3VuVGFibGUgPSBbXG5cdFtbJ0knLCAgICAgJ3dlJ10sICAgICAgIFsneW91JywgICAgICd5b3UnXSwgICAgICAgW1snaGUnLCAgICAgJ3NoZScsJ2l0J10sICAgICAgICAgICd0aGV5J11dLCAgICAgICAvLyBzdWJqZWN0XG5cdFtbJ21lJywgICAgJ3VzJ10sICAgICAgIFsneW91JywgICAgICd5b3UnXSwgICAgICAgW1snaGltJywgICAgJ2hlcicsJ2l0J10sICAgICAgICAgICd0aGVtJ11dLCAgICAgICAvLyBvYmplY3Rcblx0W1snbWluZScsICAnb3VycyddLCAgICAgWyd5b3VycycsICAgJ3lvdXJzJ10sICAgICBbWydoaXMnLCAgICAnaGVycyddLCAgICAgICAgICAgICAgJ3RoZWlycyddXSwgICAgIC8vIHBvc3Nlc3NpdmUgcHJvbm91blxuXHRbWydteXNlbGYnLCdvdXJzZWx2ZXMnXSxbJ3lvdXJzZWxmJywneW91cnNlbHZlcyddLFtbJ2hpbXNlbGYnLCdoZXJzZWxmJywgICdpdHNlbGYnXSwndGhlbXNlbHZlcyddXSwgLy8gc3ViamVjdFxuXVxuXG5jb25zdCBQcm9FcnJvcnMgPSB7XG5cdCdCQURfUFJPTk9VTl9UWVBFJzonVGhlIHByb25vdW4gdHlwZSBpcyBub3Qgc2V0IGNvcnJlY3RseS4nLFxuXHQnQkFEX1BFUlNPTic6J1BlcnNvbiBpcyBub3Qgc2V0IGNvcnJlY3RseS4nLFxuXHQnQkFEX1BMVVJBTElUWSc6J1BsdXJhbGl0eSBpcyBub3Qgc2V0IGNvcnJlY3RseS4nXG59XG5cbmNvbnN0IFByb0dlbmVyYXRlVGV4dCA9IChwcm9ub3VuKSA9PiB7XG5cblx0bGV0IHJldFZhbFxuXG5cdGNvbnN0IHt0eXBlLCBwZXJzb24sIHBsdXJhbGl0eSwgZ2VuZGVyfSA9IHByb25vdW5cblxuXHQvLyBDb252ZXJ0IGNvbnN0YW50IHZhbHVlcyB0byBpbmRpY2VzIGZvciB1c2UgaGVyZS5cblx0bGV0IHR5cGVfaWR4XG5cdHN3aXRjaCh0eXBlKSB7XG5cdFx0Y2FzZSBQcm9UeXBlLlN1YmplY3Q6XG5cdFx0XHR0eXBlX2lkeCA9IDBcblx0XHRcdGJyZWFrXG5cdFx0Y2FzZSBQcm9UeXBlLk9iamVjdDpcblx0XHRcdHR5cGVfaWR4ID0gMVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlIFByb1R5cGUuUG9zc2Vzc2l2ZTpcblx0XHRcdHR5cGVfaWR4ID0gMlxuXHRcdFx0YnJlYWtcblx0XHRjYXNlIFByb1R5cGUuUmVmbGV4aXZlSW50ZW5zaXZlOlxuXHRcdFx0dHlwZV9pZHggPSAzXG5cdFx0XHRicmVha1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4ge2U6UHJvRXJyb3JzLkJBRF9QUk9OT1VOX1RZUEV9XG5cdH1cblxuXHRsZXQgcGVyc29uX2lkeFxuXHRzd2l0Y2gocGVyc29uKSB7XG5cdFx0Y2FzZSBQZXJzb24uRmlyc3Q6XG5cdFx0XHRwZXJzb25faWR4ID0gMFxuXHRcdFx0YnJlYWtcblx0XHRjYXNlIFBlcnNvbi5TZWNvbmQ6XG5cdFx0XHRwZXJzb25faWR4ID0gMVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlIFBlcnNvbi5UaGlyZDpcblx0XHRcdHBlcnNvbl9pZHggPSAyXG5cdFx0XHRicmVha1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4ge2U6UHJvRXJyb3JzLkJBRF9QRVJTT059XG5cdH1cblxuXHRsZXQgcGx1cmFsaXR5X2lkeFxuXHRzd2l0Y2gocGx1cmFsaXR5KSB7XG5cdFx0Y2FzZSBQbHVyYWxpdHkuU2luZ3VsYXI6XG5cdFx0XHRwbHVyYWxpdHlfaWR4ID0gMFxuXHRcdFx0YnJlYWtcblx0XHRjYXNlIFBsdXJhbGl0eS5QbHVyYWw6XG5cdFx0XHRwbHVyYWxpdHlfaWR4ID0gMVxuXHRcdFx0YnJlYWtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHtlOlByb0Vycm9ycy5CQURfUExVUkFMSVRZfVxuXHR9XG5cblx0cmV0VmFsID0gUHJvbm91blRhYmxlW3R5cGVfaWR4XVtwZXJzb25faWR4XVtwbHVyYWxpdHlfaWR4XVxuXG5cdGlmKHBlcnNvbiA9PT0gUGVyc29uLlRoaXJkICYmIHBsdXJhbGl0eSA9PT0gUGx1cmFsaXR5LlNpbmd1bGFyKVxuXHRcdGlmKGdlbmRlciA9PT0gR2VuZGVyLk1hbGUpIHtcblx0XHRcdHJldFZhbCA9IHJldFZhbFswXVxuXHRcdH0gZWxzZSBpZihnZW5kZXIgPT09IEdlbmRlci5GZW1hbGUpIHtcblx0XHRcdHJldFZhbCA9IHJldFZhbFsxXVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXRWYWwgPSByZXRWYWxbMl1cblx0XHR9XG5cblx0cmV0dXJuIHJldFZhbFxuXG59XG5cbmV4cG9ydCB7UHJvRXJyb3JzfVxuZXhwb3J0IHtQcm9PYn1cbmV4cG9ydCB7UHJvR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtQcm9UeXBlfVxuIl19