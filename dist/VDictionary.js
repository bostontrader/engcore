'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.VDictOb = undefined;

var _Verb = require('./Verb');

var VDictOb = {
	arrive: new _Verb.VerbOb({ base: 'arrive', pastForm: 'arrived' }),
	be: new _Verb.VerbOb({ base: 'be', pastForm: 'was' }),
	call: new _Verb.VerbOb({ base: 'call', pastForm: 'called' }),
	come: new _Verb.VerbOb({ base: 'come', pastForm: 'came' }),
	do: new _Verb.VerbOb({ base: 'do', pastForm: 'did' }),
	fall: new _Verb.VerbOb({ base: 'fall', pastForm: 'fell' }),
	fan: new _Verb.VerbOb({ base: 'fan', pastForm: 'fanned' }),
	find: new _Verb.VerbOb({ base: 'find', pastForm: 'found' }),
	fly: new _Verb.VerbOb({ base: 'fly', pastForm: 'flew' }),
	go: new _Verb.VerbOb({ base: 'go', pastForm: 'went' }),
	have: new _Verb.VerbOb({ base: 'have', pastForm: 'had' }),
	hold: new _Verb.VerbOb({ base: 'hold', pastForm: 'held' }),
	hop: new _Verb.VerbOb({ base: 'hop', pastForm: 'hopped' }),
	inform: new _Verb.VerbOb({ base: 'inform', pastForm: 'informed' }),
	jump: new _Verb.VerbOb({ base: 'jump', pastForm: 'jumped' }),
	know: new _Verb.VerbOb({ base: 'know', pastForm: 'knew' }),
	leave: new _Verb.VerbOb({ base: 'leave', pastForm: 'left' }),
	look: new _Verb.VerbOb({ base: 'look', pastForm: 'looked' }),
	place: new _Verb.VerbOb({ base: 'place', pastForm: 'placed' }),
	play: new _Verb.VerbOb({ base: 'play', pastForm: 'played' }),
	put: new _Verb.VerbOb({ base: 'put', pastForm: 'put' }),
	run: new _Verb.VerbOb({ base: 'run', pastForm: 'ran' }),
	say: new _Verb.VerbOb({ base: 'say', pastForm: 'said' }),
	see: new _Verb.VerbOb({ base: 'see', pastForm: 'saw' }),
	shake: new _Verb.VerbOb({ base: 'shake', pastForm: 'shook' }),
	shine: new _Verb.VerbOb({ base: 'shine', pastForm: 'shined' }),
	show: new _Verb.VerbOb({ base: 'show', pastForm: 'showed' }),
	sigh: new _Verb.VerbOb({ base: 'sigh', pastForm: 'sighed' }),
	sit: new _Verb.VerbOb({ base: 'sit', pastForm: 'sat' }),
	stand: new _Verb.VerbOb({ base: 'stand', pastForm: 'stood' }),
	steal: new _Verb.VerbOb({ base: 'steal', pastForm: 'stole' }),
	step: new _Verb.VerbOb({ base: 'step', pastForm: 'stepped' }),
	stop: new _Verb.VerbOb({ base: 'stop', pastForm: 'stopped' }),
	take: new _Verb.VerbOb({ base: 'take', pastForm: 'took' }),
	tell: new _Verb.VerbOb({ base: 'tell', pastForm: 'told' }),
	turn: new _Verb.VerbOb({ base: 'turn', pastForm: 'turned' }),
	visit: new _Verb.VerbOb({ base: 'visit', pastForm: 'visited' }),
	walk: new _Verb.VerbOb({ base: 'walk', pastForm: 'walked' }),
	wash: new _Verb.VerbOb({ base: 'wash', pastForm: 'washed' }),
	wish: new _Verb.VerbOb({ base: 'wish', pastForm: 'wished' }),
	work: new _Verb.VerbOb({ base: 'work', pastForm: 'worked' })
};

exports.VDictOb = VDictOb;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9WRGljdGlvbmFyeS5qcyJdLCJuYW1lcyI6WyJWRGljdE9iIiwiYXJyaXZlIiwiYmFzZSIsInBhc3RGb3JtIiwiYmUiLCJjYWxsIiwiY29tZSIsImRvIiwiZmFsbCIsImZhbiIsImZpbmQiLCJmbHkiLCJnbyIsImhhdmUiLCJob2xkIiwiaG9wIiwiaW5mb3JtIiwianVtcCIsImtub3ciLCJsZWF2ZSIsImxvb2siLCJwbGFjZSIsInBsYXkiLCJwdXQiLCJydW4iLCJzYXkiLCJzZWUiLCJzaGFrZSIsInNoaW5lIiwic2hvdyIsInNpZ2giLCJzaXQiLCJzdGFuZCIsInN0ZWFsIiwic3RlcCIsInN0b3AiLCJ0YWtlIiwidGVsbCIsInR1cm4iLCJ2aXNpdCIsIndhbGsiLCJ3YXNoIiwid2lzaCIsIndvcmsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxVQUFVO0FBQ2ZDLFNBQVEsaUJBQVcsRUFBQ0MsTUFBSyxRQUFOLEVBQWdCQyxVQUFTLFNBQXpCLEVBQVgsQ0FETztBQUVmQyxLQUFRLGlCQUFXLEVBQUNGLE1BQUssSUFBTixFQUFnQkMsVUFBUyxLQUF6QixFQUFYLENBRk87QUFHZkUsT0FBUSxpQkFBVyxFQUFDSCxNQUFLLE1BQU4sRUFBZ0JDLFVBQVMsUUFBekIsRUFBWCxDQUhPO0FBSWZHLE9BQVEsaUJBQVcsRUFBQ0osTUFBSyxNQUFOLEVBQWdCQyxVQUFTLE1BQXpCLEVBQVgsQ0FKTztBQUtmSSxLQUFRLGlCQUFXLEVBQUNMLE1BQUssSUFBTixFQUFnQkMsVUFBUyxLQUF6QixFQUFYLENBTE87QUFNZkssT0FBUSxpQkFBVyxFQUFDTixNQUFLLE1BQU4sRUFBZ0JDLFVBQVMsTUFBekIsRUFBWCxDQU5PO0FBT2ZNLE1BQVEsaUJBQVcsRUFBQ1AsTUFBSyxLQUFOLEVBQWdCQyxVQUFTLFFBQXpCLEVBQVgsQ0FQTztBQVFmTyxPQUFRLGlCQUFXLEVBQUNSLE1BQUssTUFBTixFQUFnQkMsVUFBUyxPQUF6QixFQUFYLENBUk87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QUFRLGlCQUFXLEVBQUNyQyxNQUFLLE9BQU4sRUFBZ0JDLFVBQVMsU0FBekIsRUFBWCxDQXJDTztBQXNDZnFDLE9BQVEsaUJBQVcsRUFBQ3RDLE1BQUssTUFBTixFQUFnQkMsVUFBUyxRQUF6QixFQUFYLENBdENPO0FBdUNmc0MsT0FBUSxpQkFBVyxFQUFDdkMsTUFBSyxNQUFOLEVBQWdCQyxVQUFTLFFBQXpCLEVBQVgsQ0F2Q087QUF3Q2Z1QyxPQUFRLGlCQUFXLEVBQUN4QyxNQUFLLE1BQU4sRUFBZ0JDLFVBQVMsUUFBekIsRUFBWCxDQXhDTztBQXlDZndDLE9BQVEsaUJBQVcsRUFBQ3pDLE1BQUssTUFBTixFQUFnQkMsVUFBUyxRQUF6QixFQUFYO0FBekNPLENBQWhCOztRQTRDUUgsTyxHQUFBQSxPIiwiZmlsZSI6IlZEaWN0aW9uYXJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtWZXJiT2J9IGZyb20gJy4vVmVyYidcblxuY29uc3QgVkRpY3RPYiA9IHtcblx0YXJyaXZlOiBuZXcgVmVyYk9iKHtiYXNlOidhcnJpdmUnLCBwYXN0Rm9ybTonYXJyaXZlZCd9KSxcblx0YmU6ICAgICBuZXcgVmVyYk9iKHtiYXNlOidiZScsICAgICBwYXN0Rm9ybTond2FzJ30pLFxuXHRjYWxsOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J2NhbGwnLCAgIHBhc3RGb3JtOidjYWxsZWQnfSksXG5cdGNvbWU6ICAgbmV3IFZlcmJPYih7YmFzZTonY29tZScsICAgcGFzdEZvcm06J2NhbWUnfSksXG5cdGRvOiAgICAgbmV3IFZlcmJPYih7YmFzZTonZG8nLCAgICAgcGFzdEZvcm06J2RpZCd9KSxcblx0ZmFsbDogICBuZXcgVmVyYk9iKHtiYXNlOidmYWxsJywgICBwYXN0Rm9ybTonZmVsbCd9KSxcblx0ZmFuOiAgICBuZXcgVmVyYk9iKHtiYXNlOidmYW4nLCAgICBwYXN0Rm9ybTonZmFubmVkJ30pLFxuXHRmaW5kOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J2ZpbmQnLCAgIHBhc3RGb3JtOidmb3VuZCd9KSxcblx0Zmx5OiAgICBuZXcgVmVyYk9iKHtiYXNlOidmbHknLCAgICBwYXN0Rm9ybTonZmxldyd9KSxcblx0Z286ICAgICBuZXcgVmVyYk9iKHtiYXNlOidnbycsICAgICBwYXN0Rm9ybTond2VudCd9KSxcblx0aGF2ZTogICBuZXcgVmVyYk9iKHtiYXNlOidoYXZlJywgICBwYXN0Rm9ybTonaGFkJ30pLFxuXHRob2xkOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J2hvbGQnLCAgIHBhc3RGb3JtOidoZWxkJ30pLFxuXHRob3A6ICAgIG5ldyBWZXJiT2Ioe2Jhc2U6J2hvcCcsICAgIHBhc3RGb3JtOidob3BwZWQnfSksXG5cdGluZm9ybTogbmV3IFZlcmJPYih7YmFzZTonaW5mb3JtJywgcGFzdEZvcm06J2luZm9ybWVkJ30pLFxuXHRqdW1wOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J2p1bXAnLCAgIHBhc3RGb3JtOidqdW1wZWQnfSksXG5cdGtub3c6ICAgbmV3IFZlcmJPYih7YmFzZTona25vdycsICAgcGFzdEZvcm06J2tuZXcnfSksXG5cdGxlYXZlOiAgbmV3IFZlcmJPYih7YmFzZTonbGVhdmUnLCAgcGFzdEZvcm06J2xlZnQnfSksXG5cdGxvb2s6ICAgbmV3IFZlcmJPYih7YmFzZTonbG9vaycsICAgcGFzdEZvcm06J2xvb2tlZCd9KSxcblx0cGxhY2U6ICBuZXcgVmVyYk9iKHtiYXNlOidwbGFjZScsICBwYXN0Rm9ybToncGxhY2VkJ30pLFxuXHRwbGF5OiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3BsYXknLCAgIHBhc3RGb3JtOidwbGF5ZWQnfSksXG5cdHB1dDogICAgbmV3IFZlcmJPYih7YmFzZToncHV0JywgICAgcGFzdEZvcm06J3B1dCd9KSxcblx0cnVuOiAgICBuZXcgVmVyYk9iKHtiYXNlOidydW4nLCAgICBwYXN0Rm9ybToncmFuJ30pLFxuXHRzYXk6ICAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3NheScsICAgIHBhc3RGb3JtOidzYWlkJ30pLFxuXHRzZWU6ICAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3NlZScsICAgIHBhc3RGb3JtOidzYXcnfSksXG5cdHNoYWtlOiAgbmV3IFZlcmJPYih7YmFzZTonc2hha2UnLCAgcGFzdEZvcm06J3Nob29rJ30pLFxuXHRzaGluZTogIG5ldyBWZXJiT2Ioe2Jhc2U6J3NoaW5lJywgIHBhc3RGb3JtOidzaGluZWQnfSksXG5cdHNob3c6ICAgbmV3IFZlcmJPYih7YmFzZTonc2hvdycsICAgcGFzdEZvcm06J3Nob3dlZCd9KSxcblx0c2lnaDogICBuZXcgVmVyYk9iKHtiYXNlOidzaWdoJywgICBwYXN0Rm9ybTonc2lnaGVkJ30pLFxuXHRzaXQ6ICAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3NpdCcsICAgIHBhc3RGb3JtOidzYXQnfSksXG5cdHN0YW5kOiAgbmV3IFZlcmJPYih7YmFzZTonc3RhbmQnLCAgcGFzdEZvcm06J3N0b29kJ30pLFxuXHRzdGVhbDogIG5ldyBWZXJiT2Ioe2Jhc2U6J3N0ZWFsJywgIHBhc3RGb3JtOidzdG9sZSd9KSxcblx0c3RlcDogICBuZXcgVmVyYk9iKHtiYXNlOidzdGVwJywgICBwYXN0Rm9ybTonc3RlcHBlZCd9KSxcblx0c3RvcDogICBuZXcgVmVyYk9iKHtiYXNlOidzdG9wJywgICBwYXN0Rm9ybTonc3RvcHBlZCd9KSxcblx0dGFrZTogICBuZXcgVmVyYk9iKHtiYXNlOid0YWtlJywgICBwYXN0Rm9ybTondG9vayd9KSxcblx0dGVsbDogICBuZXcgVmVyYk9iKHtiYXNlOid0ZWxsJywgICBwYXN0Rm9ybTondG9sZCd9KSxcblx0dHVybjogICBuZXcgVmVyYk9iKHtiYXNlOid0dXJuJywgICBwYXN0Rm9ybTondHVybmVkJ30pLFxuXHR2aXNpdDogIG5ldyBWZXJiT2Ioe2Jhc2U6J3Zpc2l0JywgIHBhc3RGb3JtOid2aXNpdGVkJ30pLFxuXHR3YWxrOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3dhbGsnLCAgIHBhc3RGb3JtOid3YWxrZWQnfSksXG5cdHdhc2g6ICAgbmV3IFZlcmJPYih7YmFzZTond2FzaCcsICAgcGFzdEZvcm06J3dhc2hlZCd9KSxcblx0d2lzaDogICBuZXcgVmVyYk9iKHtiYXNlOid3aXNoJywgICBwYXN0Rm9ybTond2lzaGVkJ30pLFxuXHR3b3JrOiAgIG5ldyBWZXJiT2Ioe2Jhc2U6J3dvcmsnLCAgIHBhc3RGb3JtOid3b3JrZWQnfSksXG59XG5cbmV4cG9ydCB7VkRpY3RPYn1cbiJdfQ==