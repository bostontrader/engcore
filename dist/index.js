'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tense = exports.Schema = exports.ProType = exports.Person = exports.Plurality = exports.Gender = exports.VDict = exports.NDict = exports.AdjDict = exports.VPOb = exports.VPGenerateText = exports.VPErrors = exports.VOb = exports.VGenerateText = exports.VErrors = exports.ProOb = exports.ProGenerateText = exports.ProErrors = exports.PrePOb = exports.PrePGenerateText = exports.PrePErrors = exports.PreOb = exports.PreGenerateText = exports.PreErrors = exports.NPOb = exports.NPGenerateText = exports.NPErrors = exports.NomOb = exports.NomGenerateText = exports.NomErrors = exports.NOb = exports.NGenerateText = exports.NErrors = exports.DetPOb = exports.DetPGenerateText = exports.DetPErrors = exports.DetOb = exports.DetGenerateText = exports.DetErrors = exports.ClauseOb = exports.ClauseGenerateText = exports.ClauseErrors = exports.AdjOb = exports.AdjGenerateText = exports.AdjErrors = undefined;

var _Adj = require('./Adj');

var _Clause = require('./Clause');

var _Det = require('./Det');

var _DetP = require('./DetP');

var _N = require('./N');

var _Nom = require('./Nom');

var _NP = require('./NP');

var _Pre = require('./Pre');

var _PreP = require('./PreP');

var _Pro = require('./Pro');

var _V = require('./V');

var _VP = require('./VP');

var _AdjDict = require('./AdjDict');

var _AdjDict2 = _interopRequireDefault(_AdjDict);

var _NDict = require('./NDict');

var _NDict2 = _interopRequireDefault(_NDict);

var _VDict = require('./VDict');

var _VDict2 = _interopRequireDefault(_VDict);

var _Gender = require('./Gender');

var _Gender2 = _interopRequireDefault(_Gender);

var _Person = require('./Person');

var _Person2 = _interopRequireDefault(_Person);

var _SchemaConstants = require('./SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.AdjErrors = _Adj.AdjErrors;
exports.AdjGenerateText = _Adj.AdjGenerateText;
exports.AdjOb = _Adj.AdjOb;
exports.ClauseErrors = _Clause.ClauseErrors;
exports.ClauseGenerateText = _Clause.ClauseGenerateText;
exports.ClauseOb = _Clause.ClauseOb;
exports.DetErrors = _Det.DetErrors;
exports.DetGenerateText = _Det.DetGenerateText;
exports.DetOb = _Det.DetOb;
exports.DetPErrors = _DetP.DetPErrors;
exports.DetPGenerateText = _DetP.DetPGenerateText;
exports.DetPOb = _DetP.DetPOb;
exports.NErrors = _N.NErrors;
exports.NGenerateText = _N.NGenerateText;
exports.NOb = _N.NOb;
exports.NomErrors = _Nom.NomErrors;
exports.NomGenerateText = _Nom.NomGenerateText;
exports.NomOb = _Nom.NomOb;
exports.NPErrors = _NP.NPErrors;
exports.NPGenerateText = _NP.NPGenerateText;
exports.NPOb = _NP.NPOb;
exports.PreErrors = _Pre.PreErrors;
exports.PreGenerateText = _Pre.PreGenerateText;
exports.PreOb = _Pre.PreOb;
exports.PrePErrors = _PreP.PrePErrors;
exports.PrePGenerateText = _PreP.PrePGenerateText;
exports.PrePOb = _PreP.PrePOb;
exports.ProErrors = _Pro.ProErrors;
exports.ProGenerateText = _Pro.ProGenerateText;
exports.ProOb = _Pro.ProOb;
exports.VErrors = _V.VErrors;
exports.VGenerateText = _V.VGenerateText;
exports.VOb = _V.VOb;
exports.VPErrors = _VP.VPErrors;
exports.VPGenerateText = _VP.VPGenerateText;
exports.VPOb = _VP.VPOb;
exports.AdjDict = _AdjDict2.default;
exports.NDict = _NDict2.default;
exports.VDict = _VDict2.default;
exports.Gender = _Gender2.default;
exports.Plurality = _N.Plurality;
exports.Person = _Person2.default;
exports.ProType = _Pro.ProType;
exports.Schema = _SchemaConstants2.default;
exports.Tense = _V.Tense;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJBZGpFcnJvcnMiLCJBZGpHZW5lcmF0ZVRleHQiLCJBZGpPYiIsIkNsYXVzZUVycm9ycyIsIkNsYXVzZUdlbmVyYXRlVGV4dCIsIkNsYXVzZU9iIiwiRGV0RXJyb3JzIiwiRGV0R2VuZXJhdGVUZXh0IiwiRGV0T2IiLCJEZXRQRXJyb3JzIiwiRGV0UEdlbmVyYXRlVGV4dCIsIkRldFBPYiIsIk5FcnJvcnMiLCJOR2VuZXJhdGVUZXh0IiwiTk9iIiwiTm9tRXJyb3JzIiwiTm9tR2VuZXJhdGVUZXh0IiwiTm9tT2IiLCJOUEVycm9ycyIsIk5QR2VuZXJhdGVUZXh0IiwiTlBPYiIsIlByZUVycm9ycyIsIlByZUdlbmVyYXRlVGV4dCIsIlByZU9iIiwiUHJlUEVycm9ycyIsIlByZVBHZW5lcmF0ZVRleHQiLCJQcmVQT2IiLCJQcm9FcnJvcnMiLCJQcm9HZW5lcmF0ZVRleHQiLCJQcm9PYiIsIlZFcnJvcnMiLCJWR2VuZXJhdGVUZXh0IiwiVk9iIiwiVlBFcnJvcnMiLCJWUEdlbmVyYXRlVGV4dCIsIlZQT2IiLCJBZGpEaWN0IiwiTkRpY3QiLCJWRGljdCIsIkdlbmRlciIsIlBsdXJhbGl0eSIsIlBlcnNvbiIsIlByb1R5cGUiLCJTY2hlbWEiLCJUZW5zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUlBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBRUE7Ozs7QUFFQTs7Ozs7O1FBR1FBLFM7UUFDQUMsZTtRQUNBQyxLO1FBQ0FDLFk7UUFDQUMsa0I7UUFDQUMsUTtRQUNBQyxTO1FBQ0FDLGU7UUFDQUMsSztRQUNBQyxVO1FBQ0FDLGdCO1FBQ0FDLE07UUFDQUMsTztRQUNBQyxhO1FBQ0FDLEc7UUFDQUMsUztRQUNBQyxlO1FBQ0FDLEs7UUFDQUMsUTtRQUNBQyxjO1FBQ0FDLEk7UUFDQUMsUztRQUNBQyxlO1FBQ0FDLEs7UUFDQUMsVTtRQUNBQyxnQjtRQUNBQyxNO1FBQ0FDLFM7UUFDQUMsZTtRQUNBQyxLO1FBQ0FDLE87UUFDQUMsYTtRQUNBQyxHO1FBQ0FDLFE7UUFDQUMsYztRQUNBQyxJO1FBRUFDLE87UUFDQUMsSztRQUNBQyxLO1FBRUFDLE07UUFDQUMsUztRQUNBQyxNO1FBQ0FDLE87UUFDQUMsTTtRQUNBQyxLIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBZGpFcnJvcnN9ICAgICAgICAgIGZyb20gJy4vQWRqJ1xuaW1wb3J0IHtBZGpHZW5lcmF0ZVRleHR9ICAgIGZyb20gJy4vQWRqJ1xuaW1wb3J0IHtBZGpPYn0gICAgICAgICAgICAgIGZyb20gJy4vQWRqJ1xuaW1wb3J0IHtDbGF1c2VFcnJvcnN9ICAgICAgIGZyb20gJy4vQ2xhdXNlJ1xuaW1wb3J0IHtDbGF1c2VHZW5lcmF0ZVRleHR9IGZyb20gJy4vQ2xhdXNlJ1xuaW1wb3J0IHtDbGF1c2VPYn0gICAgICAgICAgIGZyb20gJy4vQ2xhdXNlJ1xuaW1wb3J0IHtEZXRFcnJvcnN9ICAgICAgICAgIGZyb20gJy4vRGV0J1xuaW1wb3J0IHtEZXRHZW5lcmF0ZVRleHR9ICAgIGZyb20gJy4vRGV0J1xuaW1wb3J0IHtEZXRPYn0gICAgICAgICAgICAgIGZyb20gJy4vRGV0J1xuaW1wb3J0IHtEZXRQRXJyb3JzfSAgICAgICAgIGZyb20gJy4vRGV0UCdcbmltcG9ydCB7RGV0UEdlbmVyYXRlVGV4dH0gICBmcm9tICcuL0RldFAnXG5pbXBvcnQge0RldFBPYn0gICAgICAgICAgICAgZnJvbSAnLi9EZXRQJ1xuaW1wb3J0IHtORXJyb3JzfSAgICAgICAgICAgIGZyb20gJy4vTidcbmltcG9ydCB7TkdlbmVyYXRlVGV4dH0gICAgICBmcm9tICcuL04nXG5pbXBvcnQge05PYn0gICAgICAgICAgICAgICAgZnJvbSAnLi9OJ1xuaW1wb3J0IHtOb21FcnJvcnN9ICAgICAgICAgIGZyb20gJy4vTm9tJ1xuaW1wb3J0IHtOb21HZW5lcmF0ZVRleHR9ICAgIGZyb20gJy4vTm9tJ1xuaW1wb3J0IHtOb21PYn0gICAgICAgICAgICAgIGZyb20gJy4vTm9tJ1xuaW1wb3J0IHtOUEVycm9yc30gICAgICAgICAgIGZyb20gJy4vTlAnXG5pbXBvcnQge05QR2VuZXJhdGVUZXh0fSAgICAgZnJvbSAnLi9OUCdcbmltcG9ydCB7TlBPYn0gICAgICAgICAgICAgICBmcm9tICcuL05QJ1xuaW1wb3J0IHtQcmVFcnJvcnN9ICAgICAgICAgIGZyb20gJy4vUHJlJ1xuaW1wb3J0IHtQcmVHZW5lcmF0ZVRleHR9ICAgIGZyb20gJy4vUHJlJ1xuaW1wb3J0IHtQcmVPYn0gICAgICAgICAgICAgIGZyb20gJy4vUHJlJ1xuaW1wb3J0IHtQcmVQRXJyb3JzfSAgICAgICAgIGZyb20gJy4vUHJlUCdcbmltcG9ydCB7UHJlUEdlbmVyYXRlVGV4dH0gICBmcm9tICcuL1ByZVAnXG5pbXBvcnQge1ByZVBPYn0gICAgICAgICAgICAgZnJvbSAnLi9QcmVQJ1xuaW1wb3J0IHtQcm9FcnJvcnN9ICAgICAgICAgIGZyb20gJy4vUHJvJ1xuaW1wb3J0IHtQcm9HZW5lcmF0ZVRleHR9ICAgIGZyb20gJy4vUHJvJ1xuaW1wb3J0IHtQcm9PYn0gICAgICAgICAgICAgIGZyb20gJy4vUHJvJ1xuaW1wb3J0IHtWRXJyb3JzfSAgICAgICAgICAgIGZyb20gJy4vVidcbmltcG9ydCB7VkdlbmVyYXRlVGV4dH0gICAgICBmcm9tICcuL1YnXG5pbXBvcnQge1ZPYn0gICAgICAgICAgICAgICAgZnJvbSAnLi9WJ1xuaW1wb3J0IHtWUEVycm9yc30gICAgICAgICAgIGZyb20gJy4vVlAnXG5pbXBvcnQge1ZQR2VuZXJhdGVUZXh0fSAgICAgZnJvbSAnLi9WUCdcbmltcG9ydCB7VlBPYn0gICAgICAgICAgICAgICBmcm9tICcuL1ZQJ1xuXG5pbXBvcnQgQWRqRGljdCBmcm9tICcuL0FkakRpY3QnXG5pbXBvcnQgTkRpY3QgICBmcm9tICcuL05EaWN0J1xuaW1wb3J0IFZEaWN0ICAgZnJvbSAnLi9WRGljdCdcblxuaW1wb3J0IEdlbmRlciAgICAgIGZyb20gJy4vR2VuZGVyJ1xuaW1wb3J0IHtQbHVyYWxpdHl9IGZyb20gJy4vTidcbmltcG9ydCBQZXJzb24gICAgICBmcm9tICcuL1BlcnNvbidcbmltcG9ydCB7UHJvVHlwZX0gICBmcm9tICcuL1BybydcbmltcG9ydCBTY2hlbWEgICAgICBmcm9tICcuL1NjaGVtYUNvbnN0YW50cydcbmltcG9ydCB7VGVuc2V9ICAgICBmcm9tICcuL1YnXG5cbmV4cG9ydCB7QWRqRXJyb3JzfVxuZXhwb3J0IHtBZGpHZW5lcmF0ZVRleHR9XG5leHBvcnQge0Fkak9ifVxuZXhwb3J0IHtDbGF1c2VFcnJvcnN9XG5leHBvcnQge0NsYXVzZUdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7Q2xhdXNlT2J9XG5leHBvcnQge0RldEVycm9yc31cbmV4cG9ydCB7RGV0R2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtEZXRPYn1cbmV4cG9ydCB7RGV0UEVycm9yc31cbmV4cG9ydCB7RGV0UEdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7RGV0UE9ifVxuZXhwb3J0IHtORXJyb3JzfVxuZXhwb3J0IHtOR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOT2J9XG5leHBvcnQge05vbUVycm9yc31cbmV4cG9ydCB7Tm9tR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOb21PYn1cbmV4cG9ydCB7TlBFcnJvcnN9XG5leHBvcnQge05QR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOUE9ifVxuZXhwb3J0IHtQcmVFcnJvcnN9XG5leHBvcnQge1ByZUdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7UHJlT2J9XG5leHBvcnQge1ByZVBFcnJvcnN9XG5leHBvcnQge1ByZVBHZW5lcmF0ZVRleHR9XG5leHBvcnQge1ByZVBPYn1cbmV4cG9ydCB7UHJvRXJyb3JzfVxuZXhwb3J0IHtQcm9HZW5lcmF0ZVRleHR9XG5leHBvcnQge1Byb09ifVxuZXhwb3J0IHtWRXJyb3JzfVxuZXhwb3J0IHtWR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtWT2J9XG5leHBvcnQge1ZQRXJyb3JzfVxuZXhwb3J0IHtWUEdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7VlBPYn1cblxuZXhwb3J0IHtBZGpEaWN0fVxuZXhwb3J0IHtORGljdH1cbmV4cG9ydCB7VkRpY3R9XG5cbmV4cG9ydCB7R2VuZGVyfVxuZXhwb3J0IHtQbHVyYWxpdHl9XG5leHBvcnQge1BlcnNvbn1cbmV4cG9ydCB7UHJvVHlwZX1cbmV4cG9ydCB7U2NoZW1hfVxuZXhwb3J0IHtUZW5zZX1cbiJdfQ==