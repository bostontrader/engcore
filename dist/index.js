'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tense = exports.Schema = exports.ProType = exports.Person = exports.Plurality = exports.Gender = exports.VDictOb = exports.PreDictOb = exports.NDictOb = exports.DetDictOb = exports.AdjDictOb = exports.VPOb = exports.VPGenerateText = exports.VPErrors = exports.VOb = exports.VGenerateText = exports.VErrors = exports.ProOb = exports.ProGenerateText = exports.ProErrors = exports.PrePOb = exports.PrePGenerateText = exports.PrePErrors = exports.PreOb = exports.PreGenerateText = exports.PreErrors = exports.NPOb = exports.NPGenerateText = exports.NPErrors = exports.NomOb = exports.NomGenerateText = exports.NomErrors = exports.NOb = exports.NGenerateText = exports.NErrors = exports.DetPOb = exports.DetPGenerateText = exports.DetPErrors = exports.DetOb = exports.DetGenerateText = exports.DetErrors = exports.ClauseOb = exports.ClauseGenerateText = exports.ClauseErrors = exports.AdjOb = exports.AdjGenerateText = exports.AdjErrors = undefined;

var _Adj = require('./Adj');

var _Clause = require('./Clause');

var _Det = require('./Det');

var _DetP = require('./DetP');

var _N = require('./N');

var _Nom = require('./Nom');

var _NP = require('./NP');

var _Pre = require('./Pre');

var _PreP = require('./PreP');

var _Pro = require('./Pro');

var _V = require('./V');

var _VP = require('./VP');

var _AdjDict = require('./AdjDict');

var _AdjDict2 = _interopRequireDefault(_AdjDict);

var _DetDict = require('./DetDict');

var _DetDict2 = _interopRequireDefault(_DetDict);

var _NDict = require('./NDict');

var _NDict2 = _interopRequireDefault(_NDict);

var _PreDict = require('./PreDict');

var _PreDict2 = _interopRequireDefault(_PreDict);

var _VDict = require('./VDict');

var _VDict2 = _interopRequireDefault(_VDict);

var _Gender = require('./Gender');

var _Gender2 = _interopRequireDefault(_Gender);

var _Person = require('./Person');

var _Person2 = _interopRequireDefault(_Person);

var _SchemaConstants = require('./SchemaConstants');

var _SchemaConstants2 = _interopRequireDefault(_SchemaConstants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.AdjErrors = _Adj.AdjErrors;
exports.AdjGenerateText = _Adj.AdjGenerateText;
exports.AdjOb = _Adj.AdjOb;
exports.ClauseErrors = _Clause.ClauseErrors;
exports.ClauseGenerateText = _Clause.ClauseGenerateText;
exports.ClauseOb = _Clause.ClauseOb;
exports.DetErrors = _Det.DetErrors;
exports.DetGenerateText = _Det.DetGenerateText;
exports.DetOb = _Det.DetOb;
exports.DetPErrors = _DetP.DetPErrors;
exports.DetPGenerateText = _DetP.DetPGenerateText;
exports.DetPOb = _DetP.DetPOb;
exports.NErrors = _N.NErrors;
exports.NGenerateText = _N.NGenerateText;
exports.NOb = _N.NOb;
exports.NomErrors = _Nom.NomErrors;
exports.NomGenerateText = _Nom.NomGenerateText;
exports.NomOb = _Nom.NomOb;
exports.NPErrors = _NP.NPErrors;
exports.NPGenerateText = _NP.NPGenerateText;
exports.NPOb = _NP.NPOb;
exports.PreErrors = _Pre.PreErrors;
exports.PreGenerateText = _Pre.PreGenerateText;
exports.PreOb = _Pre.PreOb;
exports.PrePErrors = _PreP.PrePErrors;
exports.PrePGenerateText = _PreP.PrePGenerateText;
exports.PrePOb = _PreP.PrePOb;
exports.ProErrors = _Pro.ProErrors;
exports.ProGenerateText = _Pro.ProGenerateText;
exports.ProOb = _Pro.ProOb;
exports.VErrors = _V.VErrors;
exports.VGenerateText = _V.VGenerateText;
exports.VOb = _V.VOb;
exports.VPErrors = _VP.VPErrors;
exports.VPGenerateText = _VP.VPGenerateText;
exports.VPOb = _VP.VPOb;
exports.AdjDictOb = _AdjDict2.default;
exports.DetDictOb = _DetDict2.default;
exports.NDictOb = _NDict2.default;
exports.PreDictOb = _PreDict2.default;
exports.VDictOb = _VDict2.default;
exports.Gender = _Gender2.default;
exports.Plurality = _N.Plurality;
exports.Person = _Person2.default;
exports.ProType = _Pro.ProType;
exports.Schema = _SchemaConstants2.default;
exports.Tense = _V.Tense;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJBZGpFcnJvcnMiLCJBZGpHZW5lcmF0ZVRleHQiLCJBZGpPYiIsIkNsYXVzZUVycm9ycyIsIkNsYXVzZUdlbmVyYXRlVGV4dCIsIkNsYXVzZU9iIiwiRGV0RXJyb3JzIiwiRGV0R2VuZXJhdGVUZXh0IiwiRGV0T2IiLCJEZXRQRXJyb3JzIiwiRGV0UEdlbmVyYXRlVGV4dCIsIkRldFBPYiIsIk5FcnJvcnMiLCJOR2VuZXJhdGVUZXh0IiwiTk9iIiwiTm9tRXJyb3JzIiwiTm9tR2VuZXJhdGVUZXh0IiwiTm9tT2IiLCJOUEVycm9ycyIsIk5QR2VuZXJhdGVUZXh0IiwiTlBPYiIsIlByZUVycm9ycyIsIlByZUdlbmVyYXRlVGV4dCIsIlByZU9iIiwiUHJlUEVycm9ycyIsIlByZVBHZW5lcmF0ZVRleHQiLCJQcmVQT2IiLCJQcm9FcnJvcnMiLCJQcm9HZW5lcmF0ZVRleHQiLCJQcm9PYiIsIlZFcnJvcnMiLCJWR2VuZXJhdGVUZXh0IiwiVk9iIiwiVlBFcnJvcnMiLCJWUEdlbmVyYXRlVGV4dCIsIlZQT2IiLCJBZGpEaWN0T2IiLCJEZXREaWN0T2IiLCJORGljdE9iIiwiUHJlRGljdE9iIiwiVkRpY3RPYiIsIkdlbmRlciIsIlBsdXJhbGl0eSIsIlBlcnNvbiIsIlByb1R5cGUiLCJTY2hlbWEiLCJUZW5zZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUdBOztBQUlBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUVBOzs7O0FBRUE7Ozs7OztRQUdRQSxTO1FBQ0FDLGU7UUFDQUMsSztRQUNBQyxZO1FBQ0FDLGtCO1FBQ0FDLFE7UUFDQUMsUztRQUNBQyxlO1FBQ0FDLEs7UUFDQUMsVTtRQUNBQyxnQjtRQUNBQyxNO1FBQ0FDLE87UUFDQUMsYTtRQUNBQyxHO1FBQ0FDLFM7UUFDQUMsZTtRQUNBQyxLO1FBQ0FDLFE7UUFDQUMsYztRQUNBQyxJO1FBQ0FDLFM7UUFDQUMsZTtRQUNBQyxLO1FBQ0FDLFU7UUFDQUMsZ0I7UUFDQUMsTTtRQUNBQyxTO1FBQ0FDLGU7UUFDQUMsSztRQUNBQyxPO1FBQ0FDLGE7UUFDQUMsRztRQUNBQyxRO1FBQ0FDLGM7UUFDQUMsSTtRQUVBQyxTO1FBQ0FDLFM7UUFDQUMsTztRQUNBQyxTO1FBQ0FDLE87UUFFQUMsTTtRQUNBQyxTO1FBQ0FDLE07UUFDQUMsTztRQUNBQyxNO1FBQ0FDLEsiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FkakVycm9yc30gICAgICAgICAgZnJvbSAnLi9BZGonXG5pbXBvcnQge0FkakdlbmVyYXRlVGV4dH0gICAgZnJvbSAnLi9BZGonXG5pbXBvcnQge0Fkak9ifSAgICAgICAgICAgICAgZnJvbSAnLi9BZGonXG5pbXBvcnQge0NsYXVzZUVycm9yc30gICAgICAgZnJvbSAnLi9DbGF1c2UnXG5pbXBvcnQge0NsYXVzZUdlbmVyYXRlVGV4dH0gZnJvbSAnLi9DbGF1c2UnXG5pbXBvcnQge0NsYXVzZU9ifSAgICAgICAgICAgZnJvbSAnLi9DbGF1c2UnXG5pbXBvcnQge0RldEVycm9yc30gICAgICAgICAgZnJvbSAnLi9EZXQnXG5pbXBvcnQge0RldEdlbmVyYXRlVGV4dH0gICAgZnJvbSAnLi9EZXQnXG5pbXBvcnQge0RldE9ifSAgICAgICAgICAgICAgZnJvbSAnLi9EZXQnXG5pbXBvcnQge0RldFBFcnJvcnN9ICAgICAgICAgZnJvbSAnLi9EZXRQJ1xuaW1wb3J0IHtEZXRQR2VuZXJhdGVUZXh0fSAgIGZyb20gJy4vRGV0UCdcbmltcG9ydCB7RGV0UE9ifSAgICAgICAgICAgICBmcm9tICcuL0RldFAnXG5pbXBvcnQge05FcnJvcnN9ICAgICAgICAgICAgZnJvbSAnLi9OJ1xuaW1wb3J0IHtOR2VuZXJhdGVUZXh0fSAgICAgIGZyb20gJy4vTidcbmltcG9ydCB7Tk9ifSAgICAgICAgICAgICAgICBmcm9tICcuL04nXG5pbXBvcnQge05vbUVycm9yc30gICAgICAgICAgZnJvbSAnLi9Ob20nXG5pbXBvcnQge05vbUdlbmVyYXRlVGV4dH0gICAgZnJvbSAnLi9Ob20nXG5pbXBvcnQge05vbU9ifSAgICAgICAgICAgICAgZnJvbSAnLi9Ob20nXG5pbXBvcnQge05QRXJyb3JzfSAgICAgICAgICAgZnJvbSAnLi9OUCdcbmltcG9ydCB7TlBHZW5lcmF0ZVRleHR9ICAgICBmcm9tICcuL05QJ1xuaW1wb3J0IHtOUE9ifSAgICAgICAgICAgICAgIGZyb20gJy4vTlAnXG5pbXBvcnQge1ByZUVycm9yc30gICAgICAgICAgZnJvbSAnLi9QcmUnXG5pbXBvcnQge1ByZUdlbmVyYXRlVGV4dH0gICAgZnJvbSAnLi9QcmUnXG5pbXBvcnQge1ByZU9ifSAgICAgICAgICAgICAgZnJvbSAnLi9QcmUnXG5pbXBvcnQge1ByZVBFcnJvcnN9ICAgICAgICAgZnJvbSAnLi9QcmVQJ1xuaW1wb3J0IHtQcmVQR2VuZXJhdGVUZXh0fSAgIGZyb20gJy4vUHJlUCdcbmltcG9ydCB7UHJlUE9ifSAgICAgICAgICAgICBmcm9tICcuL1ByZVAnXG5pbXBvcnQge1Byb0Vycm9yc30gICAgICAgICAgZnJvbSAnLi9Qcm8nXG5pbXBvcnQge1Byb0dlbmVyYXRlVGV4dH0gICAgZnJvbSAnLi9Qcm8nXG5pbXBvcnQge1Byb09ifSAgICAgICAgICAgICAgZnJvbSAnLi9Qcm8nXG5pbXBvcnQge1ZFcnJvcnN9ICAgICAgICAgICAgZnJvbSAnLi9WJ1xuaW1wb3J0IHtWR2VuZXJhdGVUZXh0fSAgICAgIGZyb20gJy4vVidcbmltcG9ydCB7Vk9ifSAgICAgICAgICAgICAgICBmcm9tICcuL1YnXG5pbXBvcnQge1ZQRXJyb3JzfSAgICAgICAgICAgZnJvbSAnLi9WUCdcbmltcG9ydCB7VlBHZW5lcmF0ZVRleHR9ICAgICBmcm9tICcuL1ZQJ1xuaW1wb3J0IHtWUE9ifSAgICAgICAgICAgICAgIGZyb20gJy4vVlAnXG5cbmltcG9ydCBBZGpEaWN0T2IgZnJvbSAnLi9BZGpEaWN0J1xuaW1wb3J0IERldERpY3RPYiBmcm9tICcuL0RldERpY3QnXG5pbXBvcnQgTkRpY3RPYiAgIGZyb20gJy4vTkRpY3QnXG5pbXBvcnQgUHJlRGljdE9iIGZyb20gJy4vUHJlRGljdCdcbmltcG9ydCBWRGljdE9iICAgZnJvbSAnLi9WRGljdCdcblxuaW1wb3J0IEdlbmRlciAgICAgIGZyb20gJy4vR2VuZGVyJ1xuaW1wb3J0IHtQbHVyYWxpdHl9IGZyb20gJy4vTidcbmltcG9ydCBQZXJzb24gICAgICBmcm9tICcuL1BlcnNvbidcbmltcG9ydCB7UHJvVHlwZX0gICBmcm9tICcuL1BybydcbmltcG9ydCBTY2hlbWEgICAgICBmcm9tICcuL1NjaGVtYUNvbnN0YW50cydcbmltcG9ydCB7VGVuc2V9ICAgICBmcm9tICcuL1YnXG5cbmV4cG9ydCB7QWRqRXJyb3JzfVxuZXhwb3J0IHtBZGpHZW5lcmF0ZVRleHR9XG5leHBvcnQge0Fkak9ifVxuZXhwb3J0IHtDbGF1c2VFcnJvcnN9XG5leHBvcnQge0NsYXVzZUdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7Q2xhdXNlT2J9XG5leHBvcnQge0RldEVycm9yc31cbmV4cG9ydCB7RGV0R2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtEZXRPYn1cbmV4cG9ydCB7RGV0UEVycm9yc31cbmV4cG9ydCB7RGV0UEdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7RGV0UE9ifVxuZXhwb3J0IHtORXJyb3JzfVxuZXhwb3J0IHtOR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOT2J9XG5leHBvcnQge05vbUVycm9yc31cbmV4cG9ydCB7Tm9tR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOb21PYn1cbmV4cG9ydCB7TlBFcnJvcnN9XG5leHBvcnQge05QR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtOUE9ifVxuZXhwb3J0IHtQcmVFcnJvcnN9XG5leHBvcnQge1ByZUdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7UHJlT2J9XG5leHBvcnQge1ByZVBFcnJvcnN9XG5leHBvcnQge1ByZVBHZW5lcmF0ZVRleHR9XG5leHBvcnQge1ByZVBPYn1cbmV4cG9ydCB7UHJvRXJyb3JzfVxuZXhwb3J0IHtQcm9HZW5lcmF0ZVRleHR9XG5leHBvcnQge1Byb09ifVxuZXhwb3J0IHtWRXJyb3JzfVxuZXhwb3J0IHtWR2VuZXJhdGVUZXh0fVxuZXhwb3J0IHtWT2J9XG5leHBvcnQge1ZQRXJyb3JzfVxuZXhwb3J0IHtWUEdlbmVyYXRlVGV4dH1cbmV4cG9ydCB7VlBPYn1cblxuZXhwb3J0IHtBZGpEaWN0T2J9XG5leHBvcnQge0RldERpY3RPYn1cbmV4cG9ydCB7TkRpY3RPYn1cbmV4cG9ydCB7UHJlRGljdE9ifVxuZXhwb3J0IHtWRGljdE9ifVxuXG5leHBvcnQge0dlbmRlcn1cbmV4cG9ydCB7UGx1cmFsaXR5fVxuZXhwb3J0IHtQZXJzb259XG5leHBvcnQge1Byb1R5cGV9XG5leHBvcnQge1NjaGVtYX1cbmV4cG9ydCB7VGVuc2V9XG4iXX0=